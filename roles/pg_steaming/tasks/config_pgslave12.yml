--- 

#- name: Create pgpass file
#  lineinfile:
#    path: /var/lib/pgsql/.pgpass
#    line: "*:5432:*:{{ REPLICATION_USER }}:{{ REPLICATION_PASS }}"
#    create: yes
#    owner: postgres
#    group: postgres
#    mode: '0600'

- name: check if standby
  stat: 
    path: "{{ PGDATA }}/standby.signal"
  register: standby

- name: initialize slave
  block:

  - name: db stopped
    systemd:
      name: postgresql-12
      state: stopped
  
  - name: pgdata directory deleted
    file:
      path: "{{ PGDATA }}"
      state: absent
  
  - name: pg_basebackup from {{ MASTER_IP }} with replication slot
    shell: 
      cmd: | 
        PGAPPNAME="{{ 'node' + ansible_eth1.ipv4.address.split('.')[3] }}" \
        PGPASSWORD="{{ REPLICATION_PASS }}" \
        /usr/pgsql-12/bin/pg_basebackup -R -D {{ PGDATA }} \
          --slot="{{ 'node' + ansible_eth1.ipv4.address.split('.')[3] }}" \
          --host="{{ MASTER_IP }}" --port=5432 --username={{ REPLICATION_USER }}
    when: REPLICATION_SLOT

  - name: pg_basebackup from {{ MASTER_IP }}
    shell: 
      cmd: | 
        PGAPPNAME="{{ 'node' + ansible_eth1.ipv4.address.split('.')[3] }}" \
        PGPASSWORD="{{ REPLICATION_PASS }}" \
        /usr/pgsql-12/bin/pg_basebackup -R -D {{ PGDATA }} \
          --host="{{ MASTER_IP }}" --port=5432 --username={{ REPLICATION_USER }}
    when: not REPLICATION_SLOT  
  
  - name: data directory are set
    file:
      path: "{{ PGDATA }}"
      state: directory
      owner: postgres
      group: postgres
      recurse: yes
  
  - name: db started
    systemd:
     name: postgresql-12
     state: started
     enabled: yes

  when: not standby.stat.exists
