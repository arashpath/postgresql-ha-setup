---

- name: replication role created
  postgresql_user:
    name: "{{ REPLICATION_USER }}"
    role_attr_flags: REPLICATION
    password: "{{ REPLICATION_PASS }}"
  no_log: true

- name: pg_hba entry added for replication
  blockinfile:
    path: "{{ PGDATA }}/pg_hba.conf"
    marker: "# {mark} ANSIBLE MANAGED BLOCK FOR REPLICATION"
    block: |
      {% for node_ip in pg_repl_nodes_ips %}
      host replication {{ REPLICATION_USER }} {{ node_ip }}/32 md5
      {% endfor %}
  notify: reload postgres

#- name: replication slots created
#  postgresql_slot:
#    name: "{{ 'slot' + item }}"
#    slot_type: physical
#    state: present
#  with_items:
#  - "{{ 'slot' + SLAVE1_IP.split('.')[3] }}"
#  - "{{ 'slot' + SLAVE2_IP.split('.')[3] }}"
#  when: REPLICATION_SLOT

- name: Change parameter in postgresql file
  lineinfile:
    path: "{{ PGDATA }}/postgresql.conf"
    regexp: '{{item.From}}'
    line: '{{item.To}}'
  with_items:
    - { From: "#wal_level = replica", To: "wal_level = replica" }
    - { From: "#max_wal_senders = 10", To: "max_wal_senders = 5" }
    - { From: "#max_replication_slots = 10", To: "max_replication_slots = 10" }
    - { From: "#wal_keep_segments = 0", To: "wal_keep_segments = 500" }
    - { From: "#hot_standby = on", To: "hot_standby = on" }
    - { From: "#hot_standby_feedback = off", To: "hot_standby_feedback = on" }
    - { From: "#max_logical_replication_workers = 4", To: "max_logical_replication_workers = 6" }
    - { From: "#max_sync_workers_per_subscription = 2", To: "max_sync_workers_per_subscription = 2" }
    - { From: "#listen_addresses = 'localhost'", To: "listen_addresses = '*'" } 
    - { From: "max_connections = 100", To: "max_connections = 200" }
  notify: restart postgres
