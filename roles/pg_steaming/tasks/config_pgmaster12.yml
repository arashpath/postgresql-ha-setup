---
- name: Add entry in pg_hba file
  blockinfile:
    path: "{{ PGDATA }}/pg_hba.conf"
    marker: "# {mark} ANSIBLE MANAGED BLOCK FOR REPLICATION"
    block: |
      host replication {{ REPLICATION_USER }} {{ MASTER_IP }}/32 md5
      host replication {{ REPLICATION_USER }} {{ SLAVE1_IP }}/32 md5
      host replication {{ REPLICATION_USER }} {{ SLAVE2_IP }}/32 md5
  notify: reload postgres

- name: Change parameter in postgresql file
  lineinfile:
    path: "{{ PGDATA }}/postgresql.conf"
    regexp: '{{item.From}}'
    line: '{{item.To}}'
  with_items:
    - { From: "#wal_level = replica", To: "wal_level = replica" }
    - { From: "#max_wal_senders = 10", To: "max_wal_senders = 5" }
    - { From: "#max_replication_slots = 10", To: "max_replication_slots = 10" }
    - { From: "#wal_keep_segments = 0", To: "wal_keep_segments = 500" }
    - { From: "#hot_standby = on", To: "hot_standby = on" }
    - { From: "#hot_standby_feedback = off", To: "hot_standby_feedback = on" }
    - { From: "#max_logical_replication_workers = 4", To: "max_logical_replication_workers = 6" }
    - { From: "#max_sync_workers_per_subscription = 2", To: "max_sync_workers_per_subscription = 2" }
    - { From: "#listen_addresses = 'localhost'", To: "listen_addresses = '*'" } 
    - { From: "max_connections = 100", To: "max_connections = 200" }
    - { From: "#archive_mode = off", To: "archive_mode = on" }
    - { From: "#archive_command = ''", To: "archive_command = 'cp %p /backup/%f'"}
    - { From: "^#promote_trigger_file = ''", To: "promote_trigger_file = '{{ PGDATA }}/waltrigger'" }
    - { From: "^#restore_command = ''", To: "restore_command = 'cp /backup/%f %p'" }
    - { From: "#recovery_target_timeline = 'latest'", To: "recovery_target_timeline = 'latest'" }
  notify: restart postgres

- name: replication role created
  postgresql_user:
    name: "{{ REPLICATION_USER }}"
    role_attr_flags: REPLICATION
    password: "{{ REPLICATION_USER_PASSWORD }}"