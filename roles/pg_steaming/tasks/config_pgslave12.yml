--- 

#- name: Create pgpass file
#  lineinfile:
#    path: /var/lib/pgsql/.pgpass
#    line: "*:5432:*:{{ REPLICATION_USER }}:{{ REPLICATION_USER_PASSWORD }}"
#    create: yes
#    owner: postgres
#    group: postgres
#    mode: '0600'

- name: check if standby
  stat: 
    path: "{{ PGDATA }}/standby.signal"
  register: standby

- name: initialize slave
  block:

  - name: db stopped
    systemd:
      name: postgresql-12
      state: stopped
  
  - name: pgdata directory deleted
    file:
      path: "{{ PGDATA }}"
      state: absent
  
  - name: pg_basebackup from {{ MASTER_IP }}
    shell: 
      cmd: PGPASSWORD="{{ REPLICATION_USER_PASSWORD }}" /usr/pgsql-12/bin/pg_basebackup -R -D {{ PGDATA }} --host="{{ MASTER_IP }}" --port=5432 --username={{ REPLICATION_USER }}
  
  - name: data directory are set
    file:
      path: "{{ PGDATA }}"
      state: directory
      owner: postgres
      group: postgres
      recurse: yes
  
  - name: db started
    systemd:
     name: postgresql-12
     state: started
     enabled: yes

  when: not standby.stat.exists

#- name: Modify paramter in postgresql.conf file
#  lineinfile:
#    path: "{{ PGDATA }}/postgresql.conf"
#    regexp: "{{item.From}}"
#    line: "{{item.To}}"
#  with_items:
#    - { From: "^#promote_trigger_file = ''", To: "promote_trigger_file = '{{ PGDATA }}/waltrigger'" }
#    - { From: "^#restore_command = ''", To: "restore_command = 'cp /backup/%f %p'" }
#    - { From: "#recovery_target_timeline = 'latest'", To: "recovery_target_timeline = 'latest'" }
#  notify: restart postgres
